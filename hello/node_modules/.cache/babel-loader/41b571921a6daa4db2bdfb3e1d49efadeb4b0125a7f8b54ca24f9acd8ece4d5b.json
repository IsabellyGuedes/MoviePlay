{"ast":null,"code":"const httpService = {\n  login: async data => {\n    try {\n      const response = await fetch(\"http://localhost:3030/user/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        const token = result.token; // Supondo que o token retornado est치 em result.token\n\n        // Salvar o token no localStorage ap칩s o login bem-sucedido\n        localStorage.setItem(\"token\", token);\n        return {\n          success: true,\n          data: result\n        }; // Retorna o sucesso e os dados recebidos\n      } else {\n        const errorData = await response.json();\n        return {\n          success: false,\n          error: errorData.message || \"Erro desconhecido\"\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: \"Erro ao realizar login\"\n      };\n    }\n  },\n  createUser: data => {\n    return fetch(\"http://localhost:3030/user/create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  },\n  getToken: () => {\n    return localStorage.getItem(\"token\");\n  },\n  getContents: () => {\n    return fetch(\"http://localhost:3030/contents\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": localStorage.getItem(\"token\")\n      }\n    });\n  },\n  addLibrary: movieId => {\n    return fetch(`http://localhost:3030/favorites/create/${movieId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": localStorage.getItem(\"token\")\n      }\n    });\n  },\n  removeLibrary: movieId => {\n    return fetch(`http://localhost:3030/favorites/delete/${movieId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": localStorage.getItem(\"token\")\n      }\n    });\n  }\n};\nexport default httpService;","map":{"version":3,"names":["httpService","login","data","response","fetch","method","headers","body","JSON","stringify","ok","result","json","token","localStorage","setItem","success","errorData","error","message","createUser","getToken","getItem","getContents","addLibrary","movieId","removeLibrary"],"sources":["C:/Users/Isabelly Camilly/.MoviePlay/hello/src/services/httpService.js"],"sourcesContent":["const httpService = {\r\n    login: async (data) => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3030/user/login\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(data)\r\n            });\r\n\r\n            if (response.ok) {\r\n                const result = await response.json();\r\n                const token = result.token; // Supondo que o token retornado est치 em result.token\r\n\r\n                // Salvar o token no localStorage ap칩s o login bem-sucedido\r\n                localStorage.setItem(\"token\", token);\r\n                \r\n                return { success: true, data: result }; // Retorna o sucesso e os dados recebidos\r\n            } else {\r\n                const errorData = await response.json();\r\n                return { success: false, error: errorData.message || \"Erro desconhecido\" };\r\n            }\r\n        } catch (error) {\r\n            return { success: false, error: \"Erro ao realizar login\" };\r\n        }\r\n    },\r\n    createUser: (data) => {\r\n        return fetch(\"http://localhost:3030/user/create\",\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    },\r\n    getToken: () => {\r\n        return localStorage.getItem(\"token\");\r\n    },\r\n    getContents: () => {\r\n        return fetch(\"http://localhost:3030/contents\",\r\n       {\r\n           method: \"GET\",\r\n           headers: {\r\n               \"Content-Type\": \"application/json\",\r\n               \"Authorization\": localStorage.getItem(\"token\")\r\n           }\r\n       })  \r\n    },\r\n    addLibrary: (movieId) => {\r\n        return fetch(`http://localhost:3030/favorites/create/${movieId}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": localStorage.getItem(\"token\")\r\n            }\r\n        })\r\n    },\r\n    removeLibrary: (movieId) => {\r\n        return fetch(`http://localhost:3030/favorites/delete/${movieId}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default httpService"],"mappings":"AAAA,MAAMA,WAAW,GAAG;EAChBC,KAAK,EAAE,MAAOC,IAAI,IAAK;IACnB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;MAC7B,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACO,EAAE,EAAE;QACb,MAAMC,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACpC,MAAMC,KAAK,GAAGF,MAAM,CAACE,KAAK,CAAC,CAAC;;QAE5B;QACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;QAEpC,OAAO;UAAEG,OAAO,EAAE,IAAI;UAAEd,IAAI,EAAES;QAAO,CAAC,CAAC,CAAC;MAC5C,CAAC,MAAM;QACH,MAAMM,SAAS,GAAG,MAAMd,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvC,OAAO;UAAEI,OAAO,EAAE,KAAK;UAAEE,KAAK,EAAED,SAAS,CAACE,OAAO,IAAI;QAAoB,CAAC;MAC9E;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZ,OAAO;QAAEF,OAAO,EAAE,KAAK;QAAEE,KAAK,EAAE;MAAyB,CAAC;IAC9D;EACJ,CAAC;EACDE,UAAU,EAAGlB,IAAI,IAAK;IAClB,OAAOE,KAAK,CAAC,mCAAmC,EAChD;MACIC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC7B,CAAC,CAAC;EACN,CAAC;EACDmB,QAAQ,EAAEA,CAAA,KAAM;IACZ,OAAOP,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC;EACxC,CAAC;EACDC,WAAW,EAAEA,CAAA,KAAM;IACf,OAAOnB,KAAK,CAAC,gCAAgC,EAC9C;MACIC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAEQ,YAAY,CAACQ,OAAO,CAAC,OAAO;MACjD;IACJ,CAAC,CAAC;EACL,CAAC;EACDE,UAAU,EAAGC,OAAO,IAAK;IACrB,OAAOrB,KAAK,CAAE,0CAAyCqB,OAAQ,EAAC,EAAE;MAC9DpB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAEQ,YAAY,CAACQ,OAAO,CAAC,OAAO;MACjD;IACJ,CAAC,CAAC;EACN,CAAC;EACDI,aAAa,EAAGD,OAAO,IAAK;IACxB,OAAOrB,KAAK,CAAE,0CAAyCqB,OAAQ,EAAC,EAAE;MAC9DpB,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAEQ,YAAY,CAACQ,OAAO,CAAC,OAAO;MACjD;IACJ,CAAC,CAAC;EACN;AAEJ,CAAC;AAED,eAAetB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}