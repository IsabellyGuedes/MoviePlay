{"ast":null,"code":"const httpService = {\n  login: data => {\n    return fetch(\"http://localhost:3333/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  },\n  createUser: () => {},\n  getUser: () => {\n    /*         return fetch(\"http://localhost:3333/login\",\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": localStorage.getItem(\"token\")\r\n    \r\n                },\r\n                body: JSON.stringify(data)\r\n            })  */\n  }\n};\nexport default httpService;","map":{"version":3,"names":["httpService","login","data","fetch","method","headers","body","JSON","stringify","createUser","getUser"],"sources":["C:/Users/Isabelly Camilly/.GreenMart/hello/src/services/httpService.js"],"sourcesContent":["const httpService = {\r\n    login: (data) => {\r\n        return fetch(\"http://localhost:3333/login\",\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }, \r\n    createUser: () => {\r\n\r\n    },\r\n\r\n    getUser: () => {\r\n/*         return fetch(\"http://localhost:3333/login\",\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": localStorage.getItem(\"token\")\r\n\r\n            },\r\n            body: JSON.stringify(data)\r\n        })  */\r\n    }\r\n}\r\nexport default httpService"],"mappings":"AAAA,MAAMA,WAAW,GAAG;EAChBC,KAAK,EAAGC,IAAI,IAAK;IACb,OAAOC,KAAK,CAAC,6BAA6B,EAC1C;MACIC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;IAC7B,CAAC,CAAC;EACN,CAAC;EACDO,UAAU,EAAEA,CAAA,KAAM,CAElB,CAAC;EAEDC,OAAO,EAAEA,CAAA,KAAM;IACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATA;AAWA,CAAC;AACD,eAAeV,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}