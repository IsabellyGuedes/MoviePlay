{"ast":null,"code":"const httpService = {\n  login: data => {\n    return fetch(\"http://localhost:3030/user/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  },\n  createUser: data => {\n    return fetch(\"http://localhost:3030/user/create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  },\n  getToken: () => {\n    return localStorage.getItem(\"token\");\n  },\n  getContents: () => {\n    return fetch(\"http://localhost:3030/contents\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": localStorage.getItem(\"token\")\n      }\n    });\n  },\n  addLibrary: movieId => {}\n};\nexport default httpService;","map":{"version":3,"names":["httpService","login","data","fetch","method","headers","body","JSON","stringify","createUser","getToken","localStorage","getItem","getContents","addLibrary","movieId"],"sources":["C:/Users/Isabelly Camilly/.MoviePlay/hello/src/services/httpService.js"],"sourcesContent":["const httpService = {\r\n    login: (data) => {\r\n        return fetch(\"http://localhost:3030/user/login\",\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    },\r\n    createUser: (data) => {\r\n        return fetch(\"http://localhost:3030/user/create\",\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    },\r\n    getToken: () => {\r\n        return localStorage.getItem(\"token\");\r\n    },\r\n    getContents: () => {\r\n        return fetch(\"http://localhost:3030/contents\",\r\n       {\r\n           method: \"GET\",\r\n           headers: {\r\n               \"Content-Type\": \"application/json\",\r\n               \"Authorization\": localStorage.getItem(\"token\")\r\n           }\r\n       })  \r\n    },\r\n    addLibrary: (movieId) => {\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default httpService"],"mappings":"AAAA,MAAMA,WAAW,GAAG;EAChBC,KAAK,EAAGC,IAAI,IAAK;IACb,OAAOC,KAAK,CAAC,kCAAkC,EAC/C;MACIC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;IAC7B,CAAC,CAAC;EACN,CAAC;EACDO,UAAU,EAAGP,IAAI,IAAK;IAClB,OAAOC,KAAK,CAAC,mCAAmC,EAChD;MACIC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;IAC7B,CAAC,CAAC;EACN,CAAC;EACDQ,QAAQ,EAAEA,CAAA,KAAM;IACZ,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACxC,CAAC;EACDC,WAAW,EAAEA,CAAA,KAAM;IACf,OAAOV,KAAK,CAAC,gCAAgC,EAC9C;MACIC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAEM,YAAY,CAACC,OAAO,CAAC,OAAO;MACjD;IACJ,CAAC,CAAC;EACL,CAAC;EACDE,UAAU,EAAGC,OAAO,IAAK,CAEzB;AAEJ,CAAC;AAED,eAAef,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}